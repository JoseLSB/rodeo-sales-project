unit MFichas.Model.Caixa.Metodos.Sangria;

interface

uses
  System.SysUtils,

  MFichas.Model.Caixa.Interfaces,
  MFichas.Model.Entidade.CAIXA,
  MFichas.Model.Entidade.CAIXAOPERACOES,

  MFichas.Controller.Constantes;

type
  TModelCaixaMetodosSangria = class(TInterfacedObject, iModelCaixaMetodosSangria)
  private
    [weak]
    FParent      : iModelCaixa;
    FEntidade    : TCAIXAOPERACOES;
    FValorSangria: Currency;
    FOperador    : String;
    constructor Create(AParent: iModelCaixa);
    procedure LimparEntidade;
  public
    destructor Destroy; override;
    class function New(AParent: iModelCaixa): iModelCaixaMetodosSangria;
    function SetValorSangria(AValue: Currency): iModelCaixaMetodosSangria;
    function SetOperador(AOperador: String)   : iModelCaixaMetodosSangria;
    function &End                             : iModelCaixaMetodos;
  end;

implementation

{ TModelCaixaMetodosSangria }

function TModelCaixaMetodosSangria.&End: iModelCaixaMetodos;
var
  LCaixaOperacoes: TCAIXAOPERACOES;
begin
  //TODO: IMPLEMENTAR METODO DE SANGRIA
  Result := FParent.Metodos;

  FParent.DAO.Modify(FParent.Entidade);

  FParent.Entidade.OPERACOES.Add(TCAIXAOPERACOES.Create);
  LCaixaOperacoes          := FParent.Entidade.OPERACOES.Last;
  LCaixaOperacoes.CAIXA    := FParent.Entidade.GUUID;
  LCaixaOperacoes.TIPO     := Integer(ocSangria);
  LCaixaOperacoes.VALOR    := FValorSangria;
  LCaixaOperacoes.OPERADOR := FOperador;

  FParent.DAO.Update(FParent.Entidade);

  LimparEntidade;
end;

procedure TModelCaixaMetodosSangria.LimparEntidade;
begin
  FParent.Entidade.OPERACOES.Clear;
end;

constructor TModelCaixaMetodosSangria.Create(AParent: iModelCaixa);
begin
  FParent   := AParent;
  FEntidade := TCAIXAOPERACOES.Create;
end;

destructor TModelCaixaMetodosSangria.Destroy;
begin
  {$IFDEF MSWINDOWS}
  FreeAndNil(FEntidade);
  {$ELSE}
  FEntidade.Free;
  FEntidade.DisposeOf;
  {$ENDIF}
  inherited;
end;

class function TModelCaixaMetodosSangria.New(AParent: iModelCaixa): iModelCaixaMetodosSangria;
begin
  Result := Self.Create(AParent);
end;

function TModelCaixaMetodosSangria.SetOperador(
  AOperador: String): iModelCaixaMetodosSangria;
begin
  Result    := Self;
  FOperador := AOperador;
end;

function TModelCaixaMetodosSangria.SetValorSangria(
  AValue: Currency): iModelCaixaMetodosSangria;
begin
  Result        := Self;
  FValorSangria := AValue;
end;

end.
