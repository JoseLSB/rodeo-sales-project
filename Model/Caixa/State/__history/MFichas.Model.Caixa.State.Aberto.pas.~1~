unit MFichas.Model.Caixa.State.Abertura;

interface

uses
  MFichas.Model.Caixa.Interfaces, System.SysUtils;

type
  TModelCaixaStateAbertura = class(TInterfacedObject, iModelCaixaMetodos)
  private
    constructor Create;
    destructor Destroy; override;
  public
    class function New: iModelCaixaMetodos;
    function Abrir     : iModelCaixaMetodosAbrir;
    function Fechar    : iModelCaixaMetodosFechar;
    function Suprimento: iModelCaixaMetodosSuprimento;
    function Sangria   : iModelCaixaMetodosSangria;
    function &End      : iModelCaixa;
  end;

implementation

{ TModelCaixaStateAbertura }

function TModelCaixaStateAbertura.Abrir: iModelCaixaMetodosAbrir;
begin
  raise Exception.Create(
    'Já existe um caixa aberto.' + sLineBreak +
    'Feche-o para prosseguir com a nova abertura.'
  );
end;

function TModelCaixaStateAbertura.&End: iModelCaixa;
begin

end;

constructor TModelCaixaStateAbertura.Create;
begin

end;

destructor TModelCaixaStateAbertura.Destroy;
begin

  inherited;
end;

function TModelCaixaStateAbertura.Fechar: iModelCaixaMetodosFechar;
begin

end;

class function TModelCaixaStateAbertura.New: iModelCaixaMetodos;
begin
  Result := Self.Create;
end;

function TModelCaixaStateAbertura.Sangria: iModelCaixaMetodosSangria;
begin

end;

function TModelCaixaStateAbertura.Suprimento: iModelCaixaMetodosSuprimento;
begin

end;

end.
