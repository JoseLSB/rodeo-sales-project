unit MFichas.Model.Configuracao.Metodos.Editar.View;

interface

uses
  System.SysUtils,
  System.Generics.Collections,

  MFichas.Model.CONFIGURACOES.Interfaces,
  MFichas.Model.Entidade.CONFIGURACOES,

  ORMBR.Types.Blob;

type
  TModelConfiguracaoMetodosEditarView = class(TInterfacedObject, iModelConfiguracaoMetodosEditarView)
  private
    [weak]
    FParent     : iModelEmpresa;
    FEntidade   : TCONFIGURACOES;
    FNomeEmpresa: String;
    FLogoEmpresa: TBlob;
    FListaConfiguracao: TObjectList<TCONFIGURACOES>;
    constructor Create(AParent: iModelEmpresa);
    procedure RecuperarObjectoNoBancoDeDados;
    procedure Gravar;
  public
    destructor Destroy; override;
    class function New(AParent: iModelEmpresa): iModelConfiguracaoMetodosEditarView;
    function Descricao(ANomeEmpresa: String): iModelConfiguracaoMetodosEditarView;
    function LogoTipo(ALogoEmpresa: String) : iModelConfiguracaoMetodosEditarView;
    function &End                           : iModelEmpresaMetodos;
  end;

implementation

{ TModelConfiguracaoMetodosEditarView }

function TModelConfiguracaoMetodosEditarView.&End: iModelEmpresaMetodos;
begin
  Result := FParent.Metodos;
  RecuperarObjectoNoBancoDeDados;
  Gravar;
end;

procedure TModelConfiguracaoMetodosEditarView.Gravar;
begin
  FParent.DAO.Modify(FEntidade);
  FEntidade.DESCRICAO := FNomeEmpresa;
  FEntidade.LOGOTIPO  := FLogoEmpresa;
  FParent.DAO.Update(FEntidade);
end;

constructor TModelConfiguracaoMetodosEditarView.Create(AParent: iModelEmpresa);
begin
  FParent   := AParent;
  FEntidade := TCONFIGURACOES.Create;
end;

function TModelConfiguracaoMetodosEditarView.Descricao(
  ANomeEmpresa: String): iModelConfiguracaoMetodosEditarView;
begin
  Result       := Self;
  FNomeEmpresa := ANomeEmpresa;
end;

destructor TModelConfiguracaoMetodosEditarView.Destroy;
begin
  {$IFDEF MSWINDOWS}
  FreeAndNil(FEntidade);
  if Assigned(FListaConfiguracao) then
    FreeAndNil(FListaConfiguracao);
  {$ELSE}
  FEntidade.Free;
  FEntidade.DisposeOf;
  if Assigned(FListaConfiguracao) then
  begin
    FListaConfiguracao.Free;
    FListaConfiguracao.DisposeOf;
  end;
  {$ENDIF}
  inherited;
end;

function TModelConfiguracaoMetodosEditarView.LogoTipo(
  ALogoEmpresa: String): iModelConfiguracaoMetodosEditarView;
begin
  Result       := Self;
  FLogoEmpresa.LoadFromFile(ALogoEmpresa);
end;

class function TModelConfiguracaoMetodosEditarView.New(AParent: iModelEmpresa): iModelConfiguracaoMetodosEditarView;
begin
  Result := Self.Create(AParent);
end;

procedure TModelConfiguracaoMetodosEditarView.RecuperarObjectoNoBancoDeDados;
begin
  FListaConfiguracao := FParent.DAO.Find;

  FEntidade.GUUID         := FListaConfiguracao[0].GUUID;
  FEntidade.DESCRICAO     := FListaConfiguracao[0].DESCRICAO;
  FEntidade.LOGOTIPO      := FListaConfiguracao[0].LOGOTIPO;
  FEntidade.DATACADASTRO  := FListaConfiguracao[0].DATACADASTRO;
  FEntidade.DATAALTERACAO := FListaConfiguracao[0].DATAALTERACAO;
end;

end.
