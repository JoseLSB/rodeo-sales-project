unit MFichas.Model.Empresa;

interface

uses
  System.SysUtils,

  MFichas.Model.Empresa.Interfaces,
  MFichas.Model.Entidade.EMPRESA,
  MFichas.Model.Conexao.Interfaces,
  MFichas.Model.Conexao.Factory,

  ORMBR.Container.ObjectSet.Interfaces,
  ORMBR.Container.ObjectSet,
  ORMBR.Container.DataSet.Interfaces,
  ORMBR.Container.FDMemTable,

  FireDAC.Comp.Client;

type
  TModelEmpresa = class(TInterfacedObject, iModelEmpresa, iModelEmpresaMetodos)
  private
    FFDMemTable: TFDMemTable;
    FConn      : iModelConexaoSQL;
    FDAO       : iContainerObjectSet<TEMPRESA>;
    FDAODataSet: iContainerDataSet<TEMPRESA>;
    constructor Create;
  public
    destructor Destroy; override;
    class function New: iModelEmpresa;
    function Metodos   : iModelEmpresaMetodos;
    function DAO       : iContainerObjectSet<TEMPRESA>;
    function DAODataSet: iContainerDataSet<TEMPRESA>;
    //METODOS
    function BuscarModel: iModelEmpresaMetodosBuscarModel;
    function EditarView : iModelEmpresaMetodosEditarView;
    function BuscarView : iModelEmpresaMetodosBuscarView;
  end;

implementation

{ TModelEmpresa }

function TModelEmpresa.BuscarModel: iModelEmpresaMetodosBuscarModel;
begin

end;

function TModelEmpresa.BuscarView: iModelEmpresaMetodosBuscarView;
begin

end;

constructor TModelEmpresa.Create;
begin
  FConn := TModelConexaoFactory.New.ConexaoSQL;
  FDAO := TContainerObjectSet<TEMPRESA>.Create(FConn.Conn);
  FDAODataSet := TContainerFDMemTable<TEMPRESA>.Create(FConn.Conn,);
end;

function TModelEmpresa.DAO: iContainerObjectSet<TEMPRESA>;
begin

end;

function TModelEmpresa.DAODataSet: iContainerDataSet<TEMPRESA>;
begin

end;

destructor TModelEmpresa.Destroy;
begin

  inherited;
end;

function TModelEmpresa.EditarView: iModelEmpresaMetodosEditarView;
begin

end;

function TModelEmpresa.Metodos: iModelEmpresaMetodos;
begin
  Result := Self;
end;

class function TModelEmpresa.New: iModelEmpresa;
begin
  Result := Self.Create;
end;

end.
