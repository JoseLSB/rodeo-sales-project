unit MFichas.Model.Caixa.State.Abrir;

interface

uses
  MFichas.Model.Caixa.Interfaces, System.SysUtils;

type
  TModelCaixaStateAbrir = class(TInterfacedObject, iModelCaixaMetodos)
  private
    constructor Create;
    destructor Destroy; override;
  public
    class function New: iModelCaixaMetodos;
    function Abrir     : iModelCaixaMetodos;
    function Fechar    : iModelCaixaMetodos;
    function Suprimento: iModelCaixaMetodos;
    function Sangria   : iModelCaixaMetodos;
    function &End      : iModelCaixa;
  end;

implementation

{ TModelCaixaStateAbrir }

function TModelCaixaStateAbrir.Abrir: iModelCaixaMetodos;
begin
  raise Exception.Create(
    'Já existe um caixa aberto.' + sLineBreak +
    'Feche-o para prosseguir com a nova abertura.'
  );
end;

function TModelCaixaStateAbrir.&End: iModelCaixa;
begin

end;

constructor TModelCaixaStateAbrir.Create;
begin

end;

destructor TModelCaixaStateAbrir.Destroy;
begin

  inherited;
end;

function TModelCaixaStateAbrir.Fechar: iModelCaixaMetodos;
begin

end;

class function TModelCaixaStateAbrir.New: iModelCaixaMetodos;
begin
  Result := Self.Create;
end;

function TModelCaixaStateAbrir.Sangria: iModelCaixaMetodos;
begin

end;

function TModelCaixaStateAbrir.Suprimento: iModelCaixaMetodos;
begin

end;

end.
