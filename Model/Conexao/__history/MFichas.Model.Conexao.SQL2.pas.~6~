unit MFichas.Model.Conexao.SQL2;

interface

uses
  System.SysUtils,
  System.Classes,
  System.IOUtils,

  FireDAC.Stan.Intf,
  FireDAC.Stan.Option,
  FireDAC.Stan.Error,
  FireDAC.UI.Intf,
  FireDAC.Phys.Intf,
  FireDAC.Stan.Def,
  FireDAC.Stan.Pool,
  FireDAC.Stan.Async,
  FireDAC.Phys,
  FireDAC.Phys.FB,
  FireDAC.Phys.FBDef,
  FireDAC.FMXUI.Wait,
  FireDAC.Comp.UI,
  FireDAC.Phys.IBBase,
  FireDAC.Comp.Client,
  FireDAC.VCLUI.Wait,
  FireDAC.Phys.SQLite,
  FireDAC.Phys.SQLiteDef,
  FireDAC.Stan.ExprFuncs,

  Data.DB,

  ORMBR.Factory.Interfaces,
  ORMBR.Factory.FireDAC,
  ORMBR.Types.DataBase,
  ORMBR.DDL.Generator.SQLite,
  ORMBR.DML.Generator.SQLite,

  MFichas.Model.Conexao.Interfaces;

const
  CaminhoDoBancoSQLite = 'C:\PROJETOS\Bancos\SQLite\FICHAS.db3';

type
  TModelConexaoSQL2 = class(TInterfacedObject, iModelConexaoSQL)
  private
    FFDConnection: TFDConnection;
    constructor Create;
    procedure CriarFDConnection;
  public
    destructor Destroy; override;
    class function New: iModelConexaoSQL;
    function Conn: iDBConnection;
  end;

implementation

{ TModelConexaoSQL2 }

function TModelConexaoSQL2.Conn: iDBConnection;
begin

end;

constructor TModelConexaoSQL2.Create;
begin
  CriarFDConnection;
end;

procedure TModelConexaoSQL2.CriarFDConnection;
begin
  FFDConnection := TFDConnection.Create(nil);
  {$IFDEF MSWINDOWS}
  FFDConnection.Params.Database := CaminhoDoBancoSQLite;
  {$ELSE}
  FFDConnection.Params.Values['Database'] := TPath.Combine(TPath.GetDocumentsPath, 'INFONACCI.db3');
  {$ENDIF}
  FFDConnection.DriverName      := 'SQLite';
  FFDConnection.Params.DriverID := 'SQLite';
  FFDConnection.Params.Add('LockingMode=Normal');
  FFDConnection.Connected := True;
end;

destructor TModelConexaoSQL2.Destroy;
begin

  inherited;
end;

class function TModelConexaoSQL2.New: iModelConexaoSQL;
begin
  Result := Self.Create;
end;

end.
