unit MFichas.Model.Empresa.Metodos.Buscar.Model;

interface

uses
  MFichas.Model.Empresa.Interfaces;

type
  TModelEmpresaMetodosBuscarModel = class(TInterfacedObject, iModelEmpresaMetodosBuscarModel)
  private
    [weak]
    FParent: iModelEmpresa;
    constructor Create(AParent: iModelEmpresa);
  public
    destructor Destroy; override;
    class function New(AParent: iModelEmpresa): iModelEmpresaMetodosBuscarModel;
    function NomeDaEmpresa: String;
    function &End         : iModelEmpresaMetodos;
  end;

implementation

{ TModelEmpresaMetodosBuscarModel }

function TModelEmpresaMetodosBuscarModel.&End: iModelEmpresaMetodos;
begin
  Result := FParent.Metodos;
end;

constructor TModelEmpresaMetodosBuscarModel.Create(AParent: iModelEmpresa);
begin
  FParent := AParent;
end;

destructor TModelEmpresaMetodosBuscarModel.Destroy;
begin

  inherited;
end;

class function TModelEmpresaMetodosBuscarModel.New(AParent: iModelEmpresa): iModelEmpresaMetodosBuscarModel;
begin
  Result := Self.Create(AParent);
end;

function TModelEmpresaMetodosBuscarModel.NomeDaEmpresa: String;
begin
  Result := FParent.DAO.Find.Items[0].DESCRICAO;
end;

end.
