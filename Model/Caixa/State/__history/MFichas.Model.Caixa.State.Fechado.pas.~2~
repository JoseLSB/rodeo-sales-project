unit MFichas.Model.Caixa.State.Fechado;

interface

uses
  MFichas.Model.Caixa.Interfaces, System.SysUtils;

type
  TModelCaixaStateFechamento = class(TInterfacedObject, iModelCaixaMetodos)
  private
    constructor Create;
    destructor Destroy; override;
  public
    class function New: iModelCaixaMetodos;
    function Abrir     : iModelCaixaMetodosAbrir;
    function Fechar    : iModelCaixaMetodosFechar;
    function Suprimento: iModelCaixaMetodosSuprimento;
    function Sangria   : iModelCaixaMetodosSangria;
    function &End      : iModelCaixa;
  end;

implementation

{ TModelCaixaStateFechamento }

function TModelCaixaStateFechamento.Abrir: iModelCaixaMetodosAbrir;
begin

end;

function TModelCaixaStateFechamento.&End: iModelCaixa;
begin

end;

constructor TModelCaixaStateFechamento.Create;
begin

end;

destructor TModelCaixaStateFechamento.Destroy;
begin

  inherited;
end;

function TModelCaixaStateFechamento.Fechar: iModelCaixaMetodosFechar;
begin
  raise Exception.Create(
    'Este caixa já encontrasse fechado.'
  );
end;

class function TModelCaixaStateFechamento.New: iModelCaixaMetodos;
begin
  Result := Self.Create;
end;

function TModelCaixaStateFechamento.Sangria: iModelCaixaMetodosSangria;
begin
  raise Exception.Create(
    'Este caixa encontrasse fechado.' + sLineBreak +
    'Não é possível efetuar uma Sangria.'
  );
end;

function TModelCaixaStateFechamento.Suprimento: iModelCaixaMetodosSuprimento;
begin
  raise Exception.Create(
    'Este caixa encontrasse fechado.' + sLineBreak +
    'Não é possível efetuar um Suprimento.'
  );
end;

end.
